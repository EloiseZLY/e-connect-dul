{"ast":null,"code":"var _jsxFileName = \"/Users/jasonchen/Desktop/NEU Align/CS5610/e-connect-dul/frontend/src/components/Cardlist/index.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"./Cardlist.css\";\nimport Card from \"../Card\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Cardlist = _ref => {\n  _s();\n  let {\n    status,\n    current\n  } = _ref;\n  const defaultUser = [{\n    firstName: \"Jimmy\",\n    lastName: \"Zhang\",\n    email: \"jimmylovewebdev@gmail.com\",\n    intro: \"Hi, My name is Jimmy and I'm a software engineer. My current focus is taking John's web class.\",\n    phone: \"206123456789\",\n    job: \"Web Developer\",\n    location: \"San Mateo, CA\",\n    profileImg: \"/images/profile-icon1.png\",\n    id: \"jimmy1\"\n  }, {\n    profileImg: \"\",\n    firstName: \"wanye\",\n    lastName: \"tseng\",\n    email: \"@@@\",\n    intro: \"3\",\n    phone: \"3\",\n    job: \"3\",\n    location: \"3\",\n    id: \"jimmy1\"\n  }, {\n    profileImg: \"\",\n    firstName: \"jason\",\n    lastName: \"chen\",\n    email: \"123@gmail.com\",\n    intro: \"555\",\n    phone: \"55\",\n    job: \"555\",\n    location: \"555\",\n    id: \"jimmy2\"\n  }, {\n    profileImg: \"\",\n    firstName: \"bob\",\n    lastName: \"lin\",\n    email: \"@\",\n    intro: \"44\",\n    phone: \"444\",\n    job: \"44\",\n    location: \"444\",\n    id: \"jimmy3\"\n  }];\n  const [cards, setCards] = useState([]);\n  // const [user, setUser] = useState({});\n  const [isDefault, setIsDefault] = useState(true);\n\n  // check if user logged in\n  // const getProfile = () => {\n  //   fetch(\"/getusers\")\n  //     .then((res) => res.json())\n  //     .then((user) => {\n  //       console.log(\"get user success\");\n  //       setUser(user);\n  //     })\n  //     .catch(() => {\n  //       console.log(\"get user fail!!!!\");\n  //       setUser({});\n  //     });\n  // };\n\n  const populateCards = () => {\n    if (current !== undefined) {\n      fetch(`/get${status}Cards`).then(res => res.json()).then(item => {\n        console.log(\"fetching success\");\n        setCards(item);\n        setIsDefault(false);\n        // console.log(\"current cards len\", cards.legnth);\n      }).catch(() => {\n        console.log(\"fetching error\");\n      });\n    } else {\n      console.log(\"use default users\");\n      // setCards(defaultUser);\n    }\n  };\n  // useEffect(getProfile, []);\n  useEffect(populateCards, [current, status]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row py-3 mx-5\",\n      children: [status === \"My\" ? /*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"p-3\",\n        children: \"Your Cards\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 28\n      }, this) : \"\", status === \"Other\" ? /*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"p-3\",\n        children: \"Collections\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 31\n      }, this) : \"\", current !== undefined && cards.length > 0 ? cards.map(items => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-sm-3\",\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          currentUser: items\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 15\n        }, this)\n      }, items.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 13\n      }, this)) : /*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"p-3\",\n        children: \"You don't have any cards here!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 11\n      }, this), isDefault ? /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"These are default cards\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 22\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_s(Cardlist, \"m74jr1ic87HNuNhZn4tgGKIW0/Y=\");\n_c = Cardlist;\nCardlist.propTypes = {\n  status: PropTypes.string.isRequired\n};\nexport default Cardlist;\nvar _c;\n$RefreshReg$(_c, \"Cardlist\");","map":{"version":3,"names":["useState","useEffect","PropTypes","Card","Cardlist","status","current","defaultUser","firstName","lastName","email","intro","phone","job","location","profileImg","id","cards","setCards","isDefault","setIsDefault","populateCards","undefined","fetch","then","res","json","item","console","log","catch","length","map","items","propTypes","string","isRequired"],"sources":["/Users/jasonchen/Desktop/NEU Align/CS5610/e-connect-dul/frontend/src/components/Cardlist/index.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"./Cardlist.css\";\nimport Card from \"../Card\";\n\nconst Cardlist = ({ status, current }) => {\n  const defaultUser = [\n    {\n      firstName: \"Jimmy\",\n      lastName: \"Zhang\",\n      email: \"jimmylovewebdev@gmail.com\",\n      intro:\n        \"Hi, My name is Jimmy and I'm a software engineer. My current focus is taking John's web class.\",\n      phone: \"206123456789\",\n      job: \"Web Developer\",\n      location: \"San Mateo, CA\",\n      profileImg: \"/images/profile-icon1.png\",\n      id: \"jimmy1\",\n    },\n    {\n      profileImg: \"\",\n      firstName: \"wanye\",\n      lastName: \"tseng\",\n      email: \"@@@\",\n      intro: \"3\",\n      phone: \"3\",\n      job: \"3\",\n      location: \"3\",\n      id: \"jimmy1\",\n    },\n    {\n      profileImg: \"\",\n      firstName: \"jason\",\n      lastName: \"chen\",\n      email: \"123@gmail.com\",\n      intro: \"555\",\n      phone: \"55\",\n      job: \"555\",\n      location: \"555\",\n      id: \"jimmy2\",\n    },\n    {\n      profileImg: \"\",\n      firstName: \"bob\",\n      lastName: \"lin\",\n      email: \"@\",\n      intro: \"44\",\n      phone: \"444\",\n      job: \"44\",\n      location: \"444\",\n      id: \"jimmy3\",\n    },\n  ];\n  const [cards, setCards] = useState([]);\n  // const [user, setUser] = useState({});\n  const [isDefault, setIsDefault] = useState(true);\n\n  // check if user logged in\n  // const getProfile = () => {\n  //   fetch(\"/getusers\")\n  //     .then((res) => res.json())\n  //     .then((user) => {\n  //       console.log(\"get user success\");\n  //       setUser(user);\n  //     })\n  //     .catch(() => {\n  //       console.log(\"get user fail!!!!\");\n  //       setUser({});\n  //     });\n  // };\n\n  const populateCards = () => {\n    if (current !== undefined) {\n      fetch(`/get${status}Cards`)\n        .then((res) => res.json())\n        .then((item) => {\n          console.log(\"fetching success\");\n          setCards(item);\n          setIsDefault(false);\n          // console.log(\"current cards len\", cards.legnth);\n        })\n        .catch(() => {\n          console.log(\"fetching error\");\n        });\n    } else {\n      console.log(\"use default users\");\n      // setCards(defaultUser);\n    }\n  };\n  // useEffect(getProfile, []);\n  useEffect(populateCards, [current, status]);\n\n  return (\n    <>\n      <div className=\"row py-3 mx-5\">\n        {status === \"My\" ? <h3 className=\"p-3\">Your Cards</h3> : \"\"}\n        {status === \"Other\" ? <h3 className=\"p-3\">Collections</h3> : \"\"}\n\n        {current !== undefined && cards.length > 0 ? (\n          cards.map((items) => (\n            <div className=\"col-sm-3\" key={items.id}>\n              <Card currentUser={items} />\n            </div>\n          ))\n        ) : (\n          <h3 className=\"p-3\">You don't have any cards here!</h3>\n        )}\n        {isDefault ? <h2>These are default cards</h2> : null}\n      </div>\n    </>\n  );\n};\nCardlist.propTypes = {\n  status: PropTypes.string.isRequired,\n};\nexport default Cardlist;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}